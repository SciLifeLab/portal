<?php

/**
 * @file
 * Tests for double_field.module.
 */

/**
 * Tests for double field types.
 */
class Double_fieldTestCase extends DrupalWebTestCase {
  protected $instance;
  protected $admin_user;
  protected $web_user;

  public static function getInfo() {
    return array(
      'name'  => 'Double field',
      'description' => 'Test the creation of double fields.',
      'group' => 'Field types'
    );
  }

  function setUp() {
    parent::setUp('double_field');

    // Create test user.
    $admin_user = $this->drupalCreateUser(
      array('access administration pages', 'administer content types')
    );
    $this->drupalLogin($admin_user);
    
    $this->widgets = $this->getAllWidgets();

    // Create content type.
    $type_name = strtolower($this->randomName(8)) . '_test';
    $this->type = $this->drupalCreateContentType(array('name' => $type_name, 'type' => $type_name))->type;
  }

  /**
   * All suported widgets.
   */
  function getAllWidgets() {
    $subwidgets = array(
      'textfield' => t('Text field'),
      'checkbox'  => t('Checkbox'),
      'select'    => t('Select list'),
      'textarea'  => t('Textarea'),
    );
    foreach ($subwidgets as $first_subwidget => $first_subwidget_label) {
      foreach ($subwidgets as $second_subwidget => $second_subwidget_label) {
        $widgets[$first_subwidget . '_&_' . $second_subwidget] = array(
          'label' => $first_subwidget_label . ' & ' . $second_subwidget_label,
        );
      }
    }
    return $widgets;
  }

  /**
   * Test admin UI.
   */
  function testAdminUI() {
    $field_name = strtolower($this->randomName(8)) . '_test';
    $field_UI_path = "admin/structure/types/manage/{$this->type}/";
    $this->drupalGet($field_UI_path . 'fields');

    // Check whether double field type is accessible.
    $this->assertFieldByXPath(
      '//select[@id="edit-fields-add-new-field-type"]/option',
      'double_field',
      'Element «edit-fields-add-new-field-type» exists.'
    );
    // Check whether double field widgets are accessible.
    $widgets = $this->xpath('//select[@id="edit-fields-add-new-field-widget-type"]/optgroup[@label="Double field"]/option/@value');
    foreach($widgets as $widget) {
      $widget = (string)$widget;
      $this->assertTrue(isset($this->widgets[$widget]), 'Widget «' . $widget . '» exists.');
    }
    $this->assertTrue(count($this->widgets) == count($widgets), 'All widgets exist.');

    // Add new field via admin UI.
    $edit = array(
      'fields[_add_new_field][label]' => 'Test',
      'fields[_add_new_field][field_name]' => $field_name,
      'fields[_add_new_field][type]' => 'double_field',
      'fields[_add_new_field][widget_type]' => 'textfield_&_textfield',
    );
    $this->drupalPost($field_UI_path . 'fields', $edit, t('Save'));

    // Drupal adds «field» prefix to all custom fields.
    $field_name = 'field_' . $field_name;

    // TODO add more tests.

  }

}
